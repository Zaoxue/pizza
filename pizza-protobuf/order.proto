syntax = "proto3";

package order;

import "address.proto";
import "pizza.proto";

enum OrderStatus {
  UNKONWN = 0;
  CART = 1;
  UNPAID = 2;
  PAID = 3;
  CANCEL_CHECKING = 4;
  CANCELED = 5;
  CANCEL_FAILED = 6;
  DELIVERING = 7;
  RECEIVED = 8;
  FINISH = 9;
  WAIT_DELIVERY = 10;
  RECEIVE_FAIL = 11;
  }

message Order {
  string id = 1;
  int64 start_time = 2;
  repeated Pizza pizzas = 3;
  Address address = 4;
  OrderStatus status = 5;// todo：需要拉起所有的，这个字段暂时没用
  int32 userId = 6;
}

// 获取订单详情
// [post] /fetchOrder

message FetchOrderReq {
  int32 user_id = 1;
  string order_id = 2;
}

message FetchOrderResp {
  ResultType result_type = 1;
  Order order = 2;
}

// 批量获取订单简介，无address
// [post] /fetchOrders

message FetchOrdersReq {
  int32 user_id = 1;
  string last_order_id = 2;
  int32 num = 3;
  repeated OrderStatus status = 4;
}

message FetchOrdersResp {
  ResultType result_type = 1;
  repeated Order orders = 2;
}

// 获取menu
// [post] /fetchMenu

message FetchMenuReq {
  int32 user_id = 1;
}

message FetchMenuResp {
  ResultType result_type = 1;
  repeated Pizza pizzas = 2;
  Order cart = 3;
}

// 下单
// [post] /sendOrder

message SendOrderReq {
  string order_id = 1;
  int32 user_address_id = 2;
}

message SendOrderResp {
  ResultType result_type = 1;
  Order order = 2; // 这个也用不到
}

// 更新当前用户的菜单
// [post] /updateOrder

message UpdateOrderReq {
  string order_id = 1;
  int32 pizza_id = 2;
  int32 count = 3;
}

message UpdateOrderResp {
  ResultType result_type = 1;
}

// 取消订单
// [post] /cancelOrder

message CancelOrderReq {
  string order_id = 1;
}

message CancelOrderResp {
  ResultType result_type = 1;
}

// 查看电话
// [post] /fetchPhone
message FetchPhoneReq {
  string order_id = 1;
}

message FetchPhoneResp {
  ResultType result_type = 1;
  string deliveryman_phone = 2;
  string shop_phone = 3;
  string service_phone = 4;
}

// 保存地址簿信息
// [post] /addUserAddress
message AddUserAddressReq {
  int32 user_id = 1;
  Address address = 2;
}

message AddUserAddressResp {
  ResultType result_type = 1;
  Address address = 2;
}

// 获取地址簿信息
// [post] /fetchUserAddresses
message FetchUserAddressesReq {
  int32 user_id = 1;
}

message FetchUserAddressesResp {
  ResultType result_type = 1;
  repeated Address addresses = 2;
}

// 支付接口，响应为表单html
// [post] /pay
message PayOrderReq {
  enum payType {
    MOBILE = 0;
    PC = 1;
  }

  string order_id = 1;
  double total_price = 2;
  payType type = 3;
}

message PayOrderResp {
  ResultType result_type = 1;
  string form = 2;
}